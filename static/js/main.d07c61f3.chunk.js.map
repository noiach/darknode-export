{"version":3,"sources":["lib/constants.ts","lib/fetchEpochRewards.ts","lib/calculateRewards.ts","logo.svg","App.tsx","index.tsx","lib/getPastLogs.ts"],"names":["DARKNODE_REGISTRY","PUBLIC_ETHEREUM_ENDPOINT","process","fetchRenVMRewards","a","Axios","post","id","jsonrpc","method","params","response","data","epochs","Object","keys","result","state","v","asset","fees","epoch","index","parseInt","Math","floor","amount","numNodes","fetchSubgraphRewards","epochDetails","query","epoches","epochIndex","filter","e","startBlockNumber","toString","blockNumber","rewardShares","reward","symbol","fetchAssets","assets","replace","decimals","getDarknodeEvents","provider","operator","getPastLogs","DarknodeRegistryABI","epochEvents","currentEpochIndex","epochEvent","push","timestamp","Promise","all","map","getBlock","Infinity","operatorFilter","registrations","deregistrations","refunds","registrationPeriods","registration","deregistration","args","_darknodeID","refund","darknodeID","registered","deregistered","undefined","refunded","currentEpoch","length","fetchSubgraphRewards_","fetchRenVMRewards_","epochRewards","claims","registrationPeriod","min","csv","Error","amountShifted","unixTimestamp","moment","format","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","stroke","strokeWidth","fill","fillRule","transform","points","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","ref","ForwardRef","App","useState","setOperator","processing","setProcessing","error","setError","setResult","handleOperatorInput","useCallback","value","handleSubmit","preventDefault","JsonRpcProvider","message","className","rel","href","onSubmit","name","type","disabled","placeholder","onChange","cx","cy","r","stroke-width","d","ReactDOM","render","StrictMode","document","getElementById","findABIMethod","abi","first","item","getEventTopic","abiItem","parameters","inputs","input","join","eventSignature","keccak256","Buffer","from","contractAddress","contractAbi","logName","eventABI","getLogs","address","fromBlock","toBlock","topics","logs","logTopic","logDecoder","Interface","event","parseLog","transactionHash"],"mappings":"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","file":"static/js/main.d07c61f3.chunk.js","sourcesContent":["export const DARKNODE_REGISTRY = \"0x2D7b6C95aFeFFa50C068D50f89C5C0014e054f0A\";\nexport const DARKNODE_PAYMENT = \"0x098e1708b920EFBdD7afe33Adb6a4CBa30c370B9\";\n\nexport const PUBLIC_ETHEREUM_ENDPOINT = `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`;\n","import Axios from \"axios\";\n\nimport { Epoch } from \"./calculateRewards\";\n\nexport const fetchRenVMRewards = async () => {\n  const response = await Axios.post(\"https://lightnode-mainnet.herokuapp.com\", {\n    id: 1,\n    jsonrpc: \"2.0\",\n    method: \"ren_queryBlockState\",\n    params: {},\n  });\n\n  const data = response.data;\n\n  const epochs: { [epoch: number]: { [asset: string]: number } } = {};\n\n  for (const asset of Object.keys(data.result.state.v)) {\n    const fees = data.result.state.v[asset].fees?.epochs;\n    if (!fees) {\n      continue;\n    }\n\n    for (const epoch of fees) {\n      const index = parseInt(epoch.epoch, 10) + 14;\n      epochs[index] = epochs[index] || {};\n      epochs[index][asset] = Math.floor(epoch.amount / epoch.numNodes);\n    }\n  }\n\n  delete epochs[14];\n  delete epochs[15];\n\n  return epochs;\n};\n\nexport const fetchSubgraphRewards = async (epochDetails: Epoch[]) => {\n  const response = await Axios.post(\n    \"https://api.thegraph.com/subgraphs/name/renproject/renvm\",\n    {\n      query: `\n{\n    epoches(first: 100, orderBy: blockNumber, orderDirection:asc) {\n        blockNumber\n        \n        rewardShares {\n        symbol\n        amount\n        amountInUsd\n        }\n    }\n}\n`,\n    }\n  );\n\n  const epochs: { [epoch: number]: { [asset: string]: number } } = {};\n\n  for (const epoch of response.data.data.epoches) {\n    // The Subgraph epoch contains the reward shares for the previous epoch.\n    const epochIndex =\n      epochDetails.filter(\n        (e) => e.startBlockNumber.toString() === epoch.blockNumber\n      )[0].index - 1;\n    for (const reward of epoch.rewardShares) {\n      if (reward.symbol === \"ETH\" || reward.symbol === \"SAI\") {\n        continue;\n      }\n      epochs[epochIndex] = epochs[epochIndex] || {};\n      epochs[epochIndex][reward.symbol] = reward.amount;\n    }\n  }\n\n  return epochs;\n};\n\nexport const fetchAssets = async () => {\n  const response = await Axios.post(\n    \"https://api.thegraph.com/subgraphs/name/renproject/renvm\",\n    {\n      query: `\n{\n    assets {\n        symbol\n        decimals\n    }\n}\n  `,\n    }\n  );\n\n  const assets: { [symbol: string]: number } = {};\n\n  for (const asset of response.data.data.assets) {\n    assets[asset.symbol.replace(/^ren/, \"\")] = asset.decimals;\n  }\n\n  return assets;\n};\n","import BigNumber from \"bignumber.js\";\nimport moment from \"moment\";\n\nimport { Provider } from \"@ethersproject/providers\";\n\nimport { AbiItem } from \"./abiItem\";\nimport { TypedEvent } from \"./ABIs/common\";\nimport DarknodeRegistryABI from \"./ABIs/DarknodeRegistry.json\";\nimport { DARKNODE_REGISTRY } from \"./constants\";\nimport {\n    fetchAssets,\n    fetchRenVMRewards,\n    fetchSubgraphRewards,\n} from \"./fetchEpochRewards\";\nimport { getPastLogs } from \"./getPastLogs\";\n\ntype LogNewEpoch = TypedEvent<\n  [BigNumber] & {\n    epochhash: BigNumber;\n  }\n>;\n\ntype LogDarknodeRegistered = TypedEvent<\n  [string, string, BigNumber] & {\n    _darknodeOperator: string;\n    _darknodeID: string;\n    amount: BigNumber;\n  }\n>;\n\ntype LogDarknodeDeregistered = TypedEvent<\n  [string, string] & {\n    _darknodeOperator: string;\n    _darknodeID: string;\n  }\n>;\n\ntype LogDarknodeRefunded = TypedEvent<\n  [string, string, BigNumber] & {\n    _darknodeOperator: string;\n    _darknodeID: string;\n    _amount: BigNumber;\n  }\n>;\n\nexport interface RegistrationPeriod {\n  darknodeID: string;\n  registered: number;\n  deregistered?: number;\n  refunded?: number;\n}\n\nexport interface Epoch {\n  index: number;\n  startBlockNumber: number;\n  timestamp: number;\n}\n\nexport const getDarknodeEvents = async (\n  provider: Provider,\n  operator: string\n) => {\n  const epochEvents = await getPastLogs<LogNewEpoch>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogNewEpoch\",\n    []\n  );\n\n  let currentEpochIndex = -15;\n\n  // An epoch contains the rewards earned during that epoch and paid out at the\n  // end of it.\n\n  let epochs: Epoch[] = [];\n  for (const epochEvent of epochEvents) {\n    epochs.push({\n      index: currentEpochIndex,\n      startBlockNumber: epochEvent.blockNumber,\n      timestamp: 0,\n    });\n    currentEpochIndex += 1;\n  }\n\n  epochs = await Promise.all(\n    epochs.map(async (e) => ({\n      ...e,\n      timestamp: (await provider.getBlock(e.startBlockNumber)).timestamp,\n    }))\n  );\n\n  epochs.push({\n    index: currentEpochIndex,\n    startBlockNumber: Infinity,\n    timestamp: Infinity,\n  });\n\n  const operatorFilter =\n    \"0x000000000000000000000000\" + operator.replace(/^0x/, \"\");\n\n  const registrations: LogDarknodeRegistered[] =\n    await getPastLogs<LogDarknodeRegistered>(\n      provider,\n      DARKNODE_REGISTRY,\n      DarknodeRegistryABI as AbiItem[],\n      \"LogDarknodeRegistered\",\n      [operatorFilter]\n    );\n\n  const deregistrations = await getPastLogs<LogDarknodeDeregistered>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogDarknodeDeregistered\",\n    [operatorFilter]\n  );\n\n  const refunds = await getPastLogs<LogDarknodeRefunded>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogDarknodeRefunded\",\n    [operatorFilter]\n  );\n\n  const registrationPeriods: RegistrationPeriod[] = [];\n  for (const registration of registrations) {\n    const deregistration = deregistrations.filter(\n      (e) =>\n        e.blockNumber > registration.blockNumber &&\n        e.args._darknodeID === registration.args._darknodeID\n    )[0];\n    const refund = refunds.filter(\n      (e) =>\n        e.blockNumber > registration.blockNumber &&\n        e.args._darknodeID === registration.args._darknodeID\n    )[0];\n    registrationPeriods.push({\n      darknodeID: registration.args._darknodeID,\n      registered: epochs.filter(\n        (e) => e.startBlockNumber > registration.blockNumber\n      )[0].index,\n      deregistered: deregistration\n        ? epochs.filter(\n            (e) => e.startBlockNumber > deregistration.blockNumber\n          )[0].index\n        : undefined,\n      refunded: refund\n        ? epochs.filter((e) => e.startBlockNumber > refund.blockNumber)[0].index\n        : undefined,\n    });\n  }\n\n  const currentEpoch = epochs[epochs.length - 1 - 1].index;\n\n  const fetchSubgraphRewards_ = fetchSubgraphRewards(epochs);\n  const fetchRenVMRewards_ = fetchRenVMRewards();\n\n  const epochRewards = {\n    ...(await fetchSubgraphRewards_),\n    ...(await fetchRenVMRewards_),\n  };\n\n  const claims: { [epoch: number]: number } = {};\n\n  // Add up the amount of darknodes the operator had during each epoch.\n  for (const registrationPeriod of registrationPeriods) {\n    for (\n      // A darknode starts earning income when it goes from \"pending registration\"\n      // to \"registered\".\n      let epoch = registrationPeriod.registered;\n      // A darknode stops earning income one epoch before it goes from\n      // \"registered\" to \"pending refund\" (ie it loses its last income).\n      epoch <\n      Math.min((registrationPeriod.deregistered || Infinity) - 1, currentEpoch);\n      epoch++\n    ) {\n      claims[epoch] = (claims[epoch] || 0) + 1;\n    }\n  }\n\n  let csv = `Type,BuyAmount,BuyCurrency,SellAmount,SellCurrency,FeeAmount,FeeCurrency,Exchange,Group,Comment,Date\\n`;\n\n  const assets = await fetchAssets();\n\n  for (const epoch in claims) {\n    for (const asset in epochRewards[epoch]) {\n      const reward = epochRewards[epoch][asset];\n      const amount = reward * claims[epoch];\n      const decimals = assets[asset.replace(/^ren/, \"\")];\n      if (decimals === undefined) {\n        throw new Error(`Unable to fetch asset decimals for ${asset}.`);\n      }\n      const amountShifted = amount / 10 ** decimals;\n      const unixTimestamp = epochs.filter(\n        (e) => e.index === parseInt(epoch, 10) + 1\n      )[0].timestamp;\n      const timestamp = moment(unixTimestamp * 1000).format(\"MM/DD/YY HH:mm\");\n      csv += `Income,${amountShifted},${asset},,,,,Darknode,,,${timestamp}\\n`;\n    }\n  }\n\n  return csv;\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Logo\",\n  transform: \"translate(10.000000, -8.000000)\",\n  fill: \"#000000\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(199.866957, 210.635678) rotate(-30.000000) translate(-199.866957, -210.635678) translate(39.866957, 69.635678)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"76.2756822 0 237.809906 0 255.836314 30.6115604 144.084707 30.6115604 144.084707 18.4072598 112.736975 18.4072598 112.736975 5.90311568 72.7250973 5.90311568\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"52.0000577 42 262.809906 42 280.836314 72.6115604 169.084707 72.6115604 169.084707 60.4072598 84.0613192 60.4072598 84.0613192 47.9031157 48.6220687 47.9031157\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"27.7723931 84 286.809906 84 304.836314 114.61156 200.555958 114.61156 200.555958 102.40726 59.1120723 102.40726 59.1120723 89.9031157 24.2218082 89.9031157\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"3.55058493 126 310.957535 126 319.07073 140.488017 309.999711 156.61156 195.107135 156.61156 195.107135 144.40726 43.854434 144.40726 43.854434 131.903116 -2.84217094e-14 131.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"9.69127366 167 303.871627 167 286.131521 197.61156 171.102987 197.61156 171.102987 185.40726 42.2531737 185.40726 42.2531737 172.903116 13.3592664 172.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"34.0050916 209 279.871627 209 262.131521 239.61156 147.102987 239.61156 147.102987 227.40726 69.3259998 227.40726 69.3259998 214.903116 37.6730844 214.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"58.1026456 251.364322 254.999578 251.364322 237.259472 281.975883 117.257385 281.975883 117.257385 269.771582 89.8614223 269.771582 89.8614223 257.267438 61.7706384 257.267438\"\n}))));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"419px\",\n    height: \"405px\",\n    viewBox: \"0 0 419 405\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.17ea95f6.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useState } from \"react\";\n\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\n\nimport { getDarknodeEvents } from \"./lib/calculateRewards\";\nimport { PUBLIC_ETHEREUM_ENDPOINT } from \"./lib/constants\";\nimport { ReactComponent as Logo } from \"./logo.svg\";\n\nfunction App() {\n  const [operator, setOperator] = useState<string>(\"\");\n  const [processing, setProcessing] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const [result, setResult] = useState<string>();\n\n  const handleOperatorInput = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setOperator(e.target.value);\n    },\n    []\n  );\n\n  const handleSubmit = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      setProcessing(true);\n      setResult(undefined);\n      setError(undefined);\n\n      try {\n        const provider = new JsonRpcProvider(PUBLIC_ETHEREUM_ENDPOINT);\n        const csv = await getDarknodeEvents(provider, operator);\n        setResult(csv);\n      } catch (error: any) {\n        setError(error.message);\n      }\n      setProcessing(false);\n    },\n    [operator]\n  );\n\n  return (\n    <div className=\"my-10\">\n      <div className=\"w-screen max-w-5xl ml-auto mr-auto p-1\">\n        <div className=\"container ml-auto mr-auto\">\n          <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n            <div className=\"px-4 py-6 bg-white space-y-6 sm:px-6\">\n              <div className=\"flex items-center justify-left\">\n                <Logo className=\"h-8 w-auto mr-2\" />\n                <h1>Darknode Income CSV</h1>\n              </div>\n              <p className=\"mt-2 text-sm text-gray-500\">\n                Enter your operator address below to generate a CSV containing\n                Epoch income events. Rewards for multiple darknodes are combined\n                into a single event per asset. The CSV format is compatible with{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  href=\"https://tokentax.co\"\n                  className=\"text-blue-900\"\n                >\n                  TokenTax.co\n                </a>\n                .\n              </p>\n            </div>\n            <div className=\"p-6 bg-gray-50 text-right\">\n              <form\n                onSubmit={handleSubmit}\n                className=\"flex items-center justify-center\"\n              >\n                <input\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  disabled={processing}\n                  placeholder=\"Operator Address\"\n                  value={operator}\n                  onChange={handleOperatorInput}\n                  className=\"p-2 shadow-sm focus:ring-blue-900 focus:border-blue-900 block w-full sm:text-sm border border-gray-300 rounded-l-md disabled:opacity-80\"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={processing}\n                  className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-r-md text-white bg-blue-900 hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  {processing ? (\n                    <>\n                      <svg\n                        className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <circle\n                          className=\"opacity-25\"\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"4\"\n                        ></circle>\n                        <path\n                          className=\"opacity-75\"\n                          fill=\"currentColor\"\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        ></path>\n                      </svg>{\" \"}\n                      Calculating\n                    </>\n                  ) : (\n                    <>Calculate</>\n                  )}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {result ? (\n        <div className=\"w-screen max-w-5xl mt-1 ml-auto mr-auto p-1\">\n          <div className=\"p-5 shadow sm:rounded-md sm:overflow-hidden container ml-auto mr-auto bg-gray-50\">\n            <pre>\n              <code>{result}</code>\n            </pre>\n          </div>\n        </div>\n      ) : null}\n\n      {error ? (\n        <div className=\"w-screen max-w-5xl mt-1 ml-auto mr-auto p-1\">\n          <div className=\"p-5 shadow sm:rounded-md sm:overflow-hidden container ml-auto mr-auto bg-gray-50\">\n            <p className=\"text-red\">Error: {error}</p>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Interface, keccak256, Result } from \"ethers/lib/utils\";\n\nimport { Provider } from \"@ethersproject/providers\";\n\nimport { AbiItem } from \"./abiItem\";\nimport { TypedEvent } from \"./ABIs/common\";\n\nconst findABIMethod = (abi: AbiItem[], name: string) => {\n  const first = abi.filter((item) => item.name === name)[0];\n  if (!first) {\n    throw new Error(`No ABI entry found for \"${name}\".`);\n  }\n  return first;\n};\n\nconst getEventTopic = (abiItem: AbiItem) => {\n  const parameters =\n    abiItem.inputs && abiItem.inputs.length > 0\n      ? abiItem.inputs.map((input) => input.type).join(\",\")\n      : \"\";\n  const eventSignature = `${abiItem.name}(${parameters})`;\n  return keccak256(Buffer.from(eventSignature));\n};\n\nexport const getPastLogs = async <T extends TypedEvent<Result>>(\n  provider: Provider,\n  contractAddress: string,\n  contractAbi: AbiItem[],\n  logName: string,\n  filter?: any[]\n): Promise<T[]> => {\n  const eventABI = findABIMethod(contractAbi, logName);\n\n  const logs = await provider.getLogs({\n    address: contractAddress,\n    fromBlock: 1,\n    toBlock: \"latest\",\n    topics: [getEventTopic(eventABI), ...(filter || [])] as string[],\n  });\n\n  const logTopic = getEventTopic(eventABI);\n\n  const logDecoder = new Interface([eventABI]);\n\n  return logs\n    .filter((event) => event.topics[0] === logTopic)\n    .map(\n      (event) =>\n        ({\n          ...logDecoder.parseLog(event),\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n        } as unknown as T)\n    );\n};\n"],"sourceRoot":""}