{"version":3,"sources":["lib/utils/constants.ts","lib/utils/fetchEpochRewards.ts","lib/utils/utils.ts","lib/getOperatorExport.ts","components/CSV.tsx","components/logo.svg","components/Table.tsx","components/App.tsx","index.tsx","lib/utils/getPastLogs.ts"],"names":["DARKNODE_REGISTRY","PUBLIC_ETHEREUM_ENDPOINT","process","fetchRenVMRewards","a","Axios","post","id","jsonrpc","method","params","response","data","epochs","Object","keys","result","state","v","asset","fees","epoch","index","parseInt","BigNumber","amount","dividedBy","numNodes","integerValue","fetchSubgraphRewards","epochDetails","query","epoches","epochIndex","filter","e","startBlockNumber","toString","blockNumber","rewardShares","reward","symbol","fetchAssets","assets","replace","decimals","getBlockTimestamp","provider","cachedBlocks","9736764","10116467","10136381","10112147","10113312","10113325","10116519","10142891","10136389","10150888","11450536","10136431","11999657","10177809","10146806","10147433","10142821","11268232","12544546","11633031","10143478","13444858","12904750","10142871","12363660","12725296","10904038","11817500","13084619","10539670","13265751","12181714","10358601","10143580","10148303","11084837","10721358","getBlock","block","timestamp","getOperatorExport","operator","getPastLogs","DarknodeRegistryABI","epochEvents","currentEpochIndex","epochEvent","push","Promise","all","map","Infinity","operatorFilter","registrations","deregistrations","refunds","registrationPeriods","registration","deregistration","args","_darknodeID","refund","darknodeID","registered","deregistered","undefined","refunded","currentEpoch","length","fetchSubgraphRewards_","fetchRenVMRewards_","epochRewards","claims","registrationPeriod","Math","min","taxableEvents","times","Error","amountShifted","shiftedBy","unixTimestamp","moment","isGreaterThan","toFixed","activeDarknodes","date","epochCount","Set","x","size","darknodeCount","events","CSV","csv","useMemo","event","format","filename","slice","href","escape","download","className","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","stroke","strokeWidth","fill","fillRule","transform","points","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","ref","ForwardRef","Table","scope","toLocaleString","App","useState","setOperator","processing","setProcessing","error","setError","operatorExport","setOperatorExport","handleOperatorInput","useCallback","value","handleSubmit","preventDefault","JsonRpcProvider","message","rel","onSubmit","name","type","disabled","placeholder","onChange","cx","cy","r","stroke-width","d","ReactDOM","render","StrictMode","document","getElementById","findABIMethod","abi","first","item","getEventTopic","abiItem","parameters","inputs","input","join","eventSignature","keccak256","Buffer","from","contractAddress","contractAbi","logName","eventABI","getLogs","address","fromBlock","toBlock","topics","logs","logTopic","logDecoder","Interface","parseLog","transactionHash"],"mappings":"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","file":"static/js/main.e871bba2.chunk.js","sourcesContent":["export const DARKNODE_REGISTRY = \"0x2D7b6C95aFeFFa50C068D50f89C5C0014e054f0A\";\nexport const DARKNODE_PAYMENT = \"0x098e1708b920EFBdD7afe33Adb6a4CBa30c370B9\";\n\nexport const PUBLIC_ETHEREUM_ENDPOINT = `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_KEY}`;\n","import Axios from \"axios\";\nimport BigNumber from \"bignumber.js\";\n\nimport { Epoch } from \"./types\";\n\nexport const fetchRenVMRewards = async () => {\n  const response = await Axios.post(\"https://lightnode-mainnet.herokuapp.com\", {\n    id: 1,\n    jsonrpc: \"2.0\",\n    method: \"ren_queryBlockState\",\n    params: {},\n  });\n\n  const data = response.data;\n\n  const epochs: { [epoch: number]: { [asset: string]: BigNumber } } = {};\n\n  for (const asset of Object.keys(data.result.state.v)) {\n    const fees = data.result.state.v[asset].fees?.epochs;\n    if (!fees) {\n      continue;\n    }\n\n    for (const epoch of fees) {\n      const index = parseInt(epoch.epoch, 10) + 14;\n      epochs[index] = epochs[index] || {};\n      epochs[index][asset] = new BigNumber(epoch.amount)\n        .dividedBy(epoch.numNodes)\n        .integerValue();\n    }\n  }\n\n  delete epochs[14];\n  delete epochs[15];\n\n  return epochs;\n};\n\nexport const fetchSubgraphRewards = async (epochDetails: Epoch[]) => {\n  const response = await Axios.post(\n    \"https://api.thegraph.com/subgraphs/name/renproject/renvm\",\n    {\n      query: `\n{\n    epoches(first: 100, orderBy: blockNumber, orderDirection:asc) {\n        blockNumber\n        \n        rewardShares {\n        symbol\n        amount\n        amountInUsd\n        }\n    }\n}\n`,\n    }\n  );\n\n  const epochs: { [epoch: number]: { [asset: string]: BigNumber } } = {};\n\n  for (const epoch of response.data.data.epoches) {\n    // The Subgraph epoch contains the reward shares for the previous epoch.\n    const epochIndex =\n      epochDetails.filter(\n        (e) => e.startBlockNumber.toString() === epoch.blockNumber\n      )[0].index - 1;\n    for (const reward of epoch.rewardShares) {\n      if (reward.symbol === \"ETH\" || reward.symbol === \"SAI\") {\n        continue;\n      }\n      epochs[epochIndex] = epochs[epochIndex] || {};\n      epochs[epochIndex][reward.symbol] = new BigNumber(reward.amount);\n    }\n  }\n\n  return epochs;\n};\n\nexport const fetchAssets = async () => {\n  const response = await Axios.post(\n    \"https://api.thegraph.com/subgraphs/name/renproject/renvm\",\n    {\n      query: `\n{\n    assets {\n        symbol\n        decimals\n    }\n}\n  `,\n    }\n  );\n\n  const assets: { [symbol: string]: number } = {};\n\n  for (const asset of response.data.data.assets) {\n    assets[asset.symbol.replace(/^ren/, \"\")] = asset.decimals;\n  }\n\n  return assets;\n};\n","import { Provider } from \"@ethersproject/providers\";\n\n// Get the timestamp of an Ethereum blocknumber.\nexport const getBlockTimestamp = async (\n  provider: Provider,\n  blockNumber: number\n): Promise<number> => {\n  // The timestamp for previous epochs is stored here to reduce requests.\n  const cachedBlocks: { [blockNumber: number]: number } = {\n    9736764: 1585088629,\n    10116467: 1590162088,\n    10136381: 1590428882,\n    10112147: 1590102650,\n    10113312: 1590118148,\n    10113325: 1590118313,\n    10116519: 1590162645,\n    10142891: 1590516490,\n    10136389: 1590428946,\n    10150888: 1590623360,\n    11450536: 1607941154,\n    10136431: 1590429540,\n    11999657: 1615230593,\n    10177809: 1590984973,\n    10146806: 1590569404,\n    10147433: 1590577645,\n    10142821: 1590515510,\n    11268232: 1605521175,\n    12544546: 1622496423,\n    11633031: 1610360661,\n    10143478: 1590524404,\n    13444858: 1634601830,\n    12904750: 1627342603,\n    10142871: 1590516286,\n    12363660: 1620077141,\n    12725296: 1624920110,\n    10904038: 1600668769,\n    11817500: 1612809667,\n    13084619: 1629762371,\n    10539670: 1595827259,\n    13265751: 1632182357,\n    12181714: 1617653170,\n    10358601: 1593404910,\n    10143580: 1590525928,\n    10148303: 1590588847,\n    11084837: 1603089153,\n    10721358: 1598249068,\n  };\n  if (cachedBlocks[blockNumber]) {\n    return cachedBlocks[blockNumber];\n  }\n  const block = await provider.getBlock(blockNumber);\n  return block.timestamp;\n};\n","import moment from \"moment\";\n\nimport { Provider } from \"@ethersproject/providers\";\n\nimport DarknodeRegistryABI from \"./ABIs/DarknodeRegistry.json\";\nimport { DARKNODE_REGISTRY } from \"./utils/constants\";\nimport {\n    fetchAssets,\n    fetchRenVMRewards,\n    fetchSubgraphRewards,\n} from \"./utils/fetchEpochRewards\";\nimport { getPastLogs } from \"./utils/getPastLogs\";\nimport {\n    AbiItem,\n    Epoch,\n    LogDarknodeDeregistered,\n    LogDarknodeRefunded,\n    LogDarknodeRegistered,\n    LogNewEpoch,\n    OperatorExport,\n    RegistrationPeriod,\n    TaxableEvent,\n} from \"./utils/types\";\nimport { getBlockTimestamp } from \"./utils/utils\";\n\n/**\n * Generate a list of taxable events for a darknode operator.\n *\n * @param provider Ethers.js provider instance.\n * @param operator The Ethereum address of the darknode operator.\n * @returns\n */\nexport const getOperatorExport = async (\n  provider: Provider,\n  operator: string\n): Promise<OperatorExport> => {\n  const epochEvents = await getPastLogs<LogNewEpoch>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogNewEpoch\",\n    []\n  );\n\n  let currentEpochIndex = -15;\n\n  // An epoch contains the rewards earned during that epoch and paid out at the\n  // end of it.\n\n  let epochs: Epoch[] = [];\n  for (const epochEvent of epochEvents) {\n    epochs.push({\n      index: currentEpochIndex,\n      startBlockNumber: epochEvent.blockNumber,\n      timestamp: 0,\n    });\n    currentEpochIndex += 1;\n  }\n\n  epochs = await Promise.all(\n    epochs.map(async (e) => ({\n      ...e,\n      timestamp: await getBlockTimestamp(provider, e.startBlockNumber),\n    }))\n  );\n\n  epochs.push({\n    index: currentEpochIndex,\n    startBlockNumber: Infinity,\n    timestamp: Infinity,\n  });\n\n  const operatorFilter =\n    \"0x000000000000000000000000\" + operator.replace(/^0x/, \"\");\n\n  const registrations: LogDarknodeRegistered[] =\n    await getPastLogs<LogDarknodeRegistered>(\n      provider,\n      DARKNODE_REGISTRY,\n      DarknodeRegistryABI as AbiItem[],\n      \"LogDarknodeRegistered\",\n      [operatorFilter]\n    );\n\n  const deregistrations = await getPastLogs<LogDarknodeDeregistered>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogDarknodeDeregistered\",\n    [operatorFilter]\n  );\n\n  const refunds = await getPastLogs<LogDarknodeRefunded>(\n    provider,\n    DARKNODE_REGISTRY,\n    DarknodeRegistryABI as AbiItem[],\n    \"LogDarknodeRefunded\",\n    [operatorFilter]\n  );\n\n  const registrationPeriods: RegistrationPeriod[] = [];\n  for (const registration of registrations) {\n    const deregistration = deregistrations.filter(\n      (e) =>\n        e.blockNumber > registration.blockNumber &&\n        e.args._darknodeID === registration.args._darknodeID\n    )[0];\n    const refund = refunds.filter(\n      (e) =>\n        e.blockNumber > registration.blockNumber &&\n        e.args._darknodeID === registration.args._darknodeID\n    )[0];\n    registrationPeriods.push({\n      darknodeID: registration.args._darknodeID,\n      registered: epochs.filter(\n        (e) => e.startBlockNumber > registration.blockNumber\n      )[0].index,\n      deregistered: deregistration\n        ? epochs.filter(\n            (e) => e.startBlockNumber > deregistration.blockNumber\n          )[0].index\n        : undefined,\n      refunded: refund\n        ? epochs.filter((e) => e.startBlockNumber > refund.blockNumber)[0].index\n        : undefined,\n    });\n  }\n\n  const currentEpoch = epochs[epochs.length - 1 - 1].index;\n\n  const fetchSubgraphRewards_ = fetchSubgraphRewards(epochs);\n  const fetchRenVMRewards_ = fetchRenVMRewards();\n\n  const epochRewards = {\n    ...(await fetchSubgraphRewards_),\n    ...(await fetchRenVMRewards_),\n  };\n\n  const claims: { [epoch: number]: number } = {};\n\n  // Add up the amount of darknodes the operator had during each epoch.\n  for (const registrationPeriod of registrationPeriods) {\n    for (\n      // A darknode starts earning rewards when it goes from \"pending registration\"\n      // to \"registered\".\n      let epoch = registrationPeriod.registered;\n      // A darknode stops earning rewards one epoch before it goes from\n      // \"registered\" to \"pending refund\" (ie it loses its last income).\n      epoch <\n      Math.min((registrationPeriod.deregistered || Infinity) - 1, currentEpoch);\n      epoch++\n    ) {\n      claims[epoch] = (claims[epoch] || 0) + 1;\n    }\n  }\n\n  const assets = await fetchAssets();\n\n  const taxableEvents: TaxableEvent[] = [];\n\n  for (const epoch in claims) {\n    for (const asset in epochRewards[epoch]) {\n      const reward = epochRewards[epoch][asset];\n      const amount = reward.times(claims[epoch]);\n      const decimals = assets[asset.replace(/^ren/, \"\")];\n      if (decimals === undefined) {\n        throw new Error(`Unable to fetch asset decimals for ${asset}.`);\n      }\n      const amountShifted = amount.shiftedBy(-decimals);\n      const unixTimestamp = epochs.filter(\n        (e) => e.index === parseInt(epoch, 10) + 1\n      )[0].timestamp;\n      const timestamp = moment(unixTimestamp * 1000);\n      if (amountShifted.isGreaterThan(0)) {\n        taxableEvents.push({\n          amount: amountShifted.toFixed(),\n          asset,\n          timestamp,\n          epoch: parseInt(epoch),\n          activeDarknodes: claims[epoch],\n        });\n      }\n    }\n  }\n\n  return {\n    date: moment(),\n    operator,\n    epochCount: new Set(taxableEvents.map((x) => x.epoch)).size,\n    darknodeCount: new Set(registrationPeriods.map((x) => x.darknodeID)).size,\n    events: taxableEvents,\n  };\n};\n","import moment from \"moment\";\nimport React, { useMemo } from \"react\";\n\nimport { TaxableEvent } from \"../lib/utils/types\";\n\nexport const CSV: React.FC<{\n  operator: string;\n  taxableEvents: TaxableEvent[];\n}> = ({ operator, taxableEvents }) => {\n  const csv = useMemo(() => {\n    let csv = `Type,BuyAmount,BuyCurrency,SellAmount,SellCurrency,FeeAmount,FeeCurrency,Exchange,Group,Comment,Date\\n`;\n    for (const event of taxableEvents) {\n      csv += `Income,${event.amount},${\n        event.asset\n      },,,,,Darknode,,,${event.timestamp.format(\"MM/DD/YY HH:mm\")}\\n`;\n    }\n    return csv;\n  }, [taxableEvents]);\n\n  const filename = useMemo(\n    () =>\n      `operator-${operator.slice(0, 8)}-export-${moment().format(\n        \"YYYY_MM_DD\"\n      )}.csv`,\n    [operator]\n  );\n\n  return (\n    <a\n      href={`data:text/csv;charset=utf-8,${escape(csv)}`}\n      download={filename}\n      className=\"text-blue-900\"\n    >\n      Download CSV\n    </a>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Logo\",\n  transform: \"translate(10.000000, -8.000000)\",\n  fill: \"#000000\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(199.866957, 210.635678) rotate(-30.000000) translate(-199.866957, -210.635678) translate(39.866957, 69.635678)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"76.2756822 0 237.809906 0 255.836314 30.6115604 144.084707 30.6115604 144.084707 18.4072598 112.736975 18.4072598 112.736975 5.90311568 72.7250973 5.90311568\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"52.0000577 42 262.809906 42 280.836314 72.6115604 169.084707 72.6115604 169.084707 60.4072598 84.0613192 60.4072598 84.0613192 47.9031157 48.6220687 47.9031157\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"27.7723931 84 286.809906 84 304.836314 114.61156 200.555958 114.61156 200.555958 102.40726 59.1120723 102.40726 59.1120723 89.9031157 24.2218082 89.9031157\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"3.55058493 126 310.957535 126 319.07073 140.488017 309.999711 156.61156 195.107135 156.61156 195.107135 144.40726 43.854434 144.40726 43.854434 131.903116 -2.84217094e-14 131.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"9.69127366 167 303.871627 167 286.131521 197.61156 171.102987 197.61156 171.102987 185.40726 42.2531737 185.40726 42.2531737 172.903116 13.3592664 172.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"34.0050916 209 279.871627 209 262.131521 239.61156 147.102987 239.61156 147.102987 227.40726 69.3259998 227.40726 69.3259998 214.903116 37.6730844 214.903116\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"58.1026456 251.364322 254.999578 251.364322 237.259472 281.975883 117.257385 281.975883 117.257385 269.771582 89.8614223 269.771582 89.8614223 257.267438 61.7706384 257.267438\"\n}))));\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"419px\",\n    height: \"405px\",\n    viewBox: \"0 0 419 405\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Group\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.17ea95f6.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport { TaxableEvent } from \"../lib/utils/types\";\n\nexport const Table: React.FC<{ taxableEvents: TaxableEvent[] }> = ({\n  taxableEvents,\n}) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Epoch\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Amount\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Asset\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Timestamp\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Active Darknodes\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {taxableEvents.map((event, i) => (\n                  <tr key={i}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        Epoch {event.epoch}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {event.amount}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{event.asset}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {event.timestamp.toLocaleString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">\n                        {event.activeDarknodes}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useState } from \"react\";\n\nimport { JsonRpcProvider } from \"@ethersproject/providers\";\n\nimport { getOperatorExport } from \"../lib/getOperatorExport\";\nimport { PUBLIC_ETHEREUM_ENDPOINT } from \"../lib/utils/constants\";\nimport { OperatorExport } from \"../lib/utils/types\";\nimport { CSV } from \"./CSV\";\nimport { ReactComponent as Logo } from \"./logo.svg\";\nimport { Table } from \"./Table\";\n\nfunction App() {\n  const [operator, setOperator] = useState<string>(\"\");\n  const [processing, setProcessing] = useState<boolean>(false);\n  const [error, setError] = useState<string>();\n  const [operatorExport, setOperatorExport] = useState<OperatorExport>();\n\n  const handleOperatorInput = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setOperator(e.target.value);\n    },\n    []\n  );\n\n  const handleSubmit = useCallback(\n    async (e: React.FormEvent) => {\n      e.preventDefault();\n\n      setProcessing(true);\n      setOperatorExport(undefined);\n      setError(undefined);\n\n      try {\n        const provider = new JsonRpcProvider(PUBLIC_ETHEREUM_ENDPOINT);\n        const operatorExport = await getOperatorExport(provider, operator);\n        setOperatorExport(operatorExport);\n      } catch (error: any) {\n        setError(error.message);\n      }\n      setProcessing(false);\n    },\n    [operator]\n  );\n\n  return (\n    <div className=\"my-10\">\n      <div className=\"w-screen max-w-5xl ml-auto mr-auto p-1\">\n        <div className=\"container ml-auto mr-auto\">\n          <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n            <div className=\"px-4 py-6 bg-white space-y-6 sm:px-6\">\n              <div className=\"flex items-center justify-left\">\n                <Logo className=\"h-8 w-auto mr-2\" />\n                <h1>Darknode Rewards Export</h1>\n              </div>\n              <p className=\"mt-2 text-sm text-gray-500\">\n                Enter your operator address below to generate a list of past\n                darknode rewards. Rewards for multiple darknodes are combined\n                into a single event per asset. Note - up until Epoch 15,\n                darknodes required ETH to claim rewards - this tool currently\n                assumes all claims were made. The downloadable CSV format is\n                compatible with{\" \"}\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\"\n                  href=\"https://tokentax.co\"\n                  className=\"text-blue-900\"\n                >\n                  TokenTax.co\n                </a>\n                .\n              </p>\n            </div>\n            <div className=\"p-6 bg-gray-50 text-right\">\n              <form\n                onSubmit={handleSubmit}\n                className=\"flex items-center justify-center\"\n              >\n                <input\n                  id=\"about\"\n                  name=\"about\"\n                  type=\"text\"\n                  disabled={processing}\n                  placeholder=\"Operator Address\"\n                  value={operator}\n                  onChange={handleOperatorInput}\n                  className=\"p-2 shadow-sm focus:ring-blue-900 focus:border-blue-900 block w-full sm:text-sm border border-gray-300 rounded-l-md disabled:opacity-80\"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={processing}\n                  className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-r-md text-white bg-blue-900 hover:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  {processing ? (\n                    <>\n                      <svg\n                        className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <circle\n                          className=\"opacity-25\"\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"4\"\n                        ></circle>\n                        <path\n                          className=\"opacity-75\"\n                          fill=\"currentColor\"\n                          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                        ></path>\n                      </svg>{\" \"}\n                      Calculating\n                    </>\n                  ) : (\n                    <>Calculate</>\n                  )}\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {operatorExport ? (\n        <div className=\"w-screen max-w-5xl mt-2 ml-auto mr-auto p-1\">\n          <div className=\"p-5 shadow sm:rounded-md sm:overflow-hidden container ml-auto mr-auto bg-gray-50 mb-4\">\n            <div className=\"mb-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n              Summary\n            </div>\n            <div className=\"text-sm text-gray-900\">\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                href={`https://etherscan.io/address/${operatorExport.operator}`}\n                className=\"text-blue-900\"\n              >\n                {operatorExport.operator.slice(0, 8)}...\n                {operatorExport.operator.slice(-6)}\n              </a>{\" \"}\n              had {operatorExport.darknodeCount} darknodes active over{\" \"}\n              {operatorExport.epochCount} epochs. Generated on{\" \"}\n              {operatorExport.date.format(\"LLL\")}.\n            </div>\n            <br />\n            <div className=\"text-sm text-gray-900\">\n              <CSV\n                operator={operatorExport.operator}\n                taxableEvents={operatorExport.events}\n              />\n            </div>\n          </div>\n          <Table taxableEvents={operatorExport.events} />\n        </div>\n      ) : null}\n\n      {error ? (\n        <div className=\"w-screen max-w-5xl mt-4 ml-auto mr-auto p-1\">\n          <div className=\"p-5 shadow sm:rounded-md sm:overflow-hidden container ml-auto mr-auto bg-gray-50\">\n            <p className=\"text-red\">Error: {error}</p>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { Interface, keccak256, Result } from \"ethers/lib/utils\";\n\nimport { Provider } from \"@ethersproject/providers\";\n\nimport { TypedEvent } from \"../ABIs/common\";\nimport { AbiItem } from \"./types\";\n\nconst findABIMethod = (abi: AbiItem[], name: string) => {\n  const first = abi.filter((item) => item.name === name)[0];\n  if (!first) {\n    throw new Error(`No ABI entry found for \"${name}\".`);\n  }\n  return first;\n};\n\nconst getEventTopic = (abiItem: AbiItem) => {\n  const parameters =\n    abiItem.inputs && abiItem.inputs.length > 0\n      ? abiItem.inputs.map((input) => input.type).join(\",\")\n      : \"\";\n  const eventSignature = `${abiItem.name}(${parameters})`;\n  return keccak256(Buffer.from(eventSignature));\n};\n\nexport const getPastLogs = async <T extends TypedEvent<Result>>(\n  provider: Provider,\n  contractAddress: string,\n  contractAbi: AbiItem[],\n  logName: string,\n  filter?: any[]\n): Promise<T[]> => {\n  const eventABI = findABIMethod(contractAbi, logName);\n\n  const logs = await provider.getLogs({\n    address: contractAddress,\n    fromBlock: 1,\n    toBlock: \"latest\",\n    topics: [getEventTopic(eventABI), ...(filter || [])] as string[],\n  });\n\n  const logTopic = getEventTopic(eventABI);\n\n  const logDecoder = new Interface([eventABI]);\n\n  return logs\n    .filter((event) => event.topics[0] === logTopic)\n    .map(\n      (event) =>\n        ({\n          ...logDecoder.parseLog(event),\n          transactionHash: event.transactionHash,\n          blockNumber: event.blockNumber,\n        } as unknown as T)\n    );\n};\n"],"sourceRoot":""}